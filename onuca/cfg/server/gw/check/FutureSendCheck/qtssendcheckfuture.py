from qtscommon import *
from qtsriskerr import *
#///////////////////////////////////////////////////////////////////////////////////
QTS_SENDCHECK_ITEMS = 'QTS_FutureSendCheck_Items'
QTS_SENDCHECK_ITEM_IFFUTURE = 'QTS_FutureSendCheck_Item_IFFuture'

#///////////////////////////////////////////////////////////////////////////////////
CreateCheck(QTS_SENDCHECK_ITEMS)
AppendCheck(QTS_SENDCHECK_ITEMS,'QTS_EtfHedgeCheckItem_3',QTS_SENDCHECK_ITEM_IFFUTURE)

CreateCheck(QTS_SENDCHECK_ITEM_IFFUTURE)
AppendCheck(QTS_SENDCHECK_ITEM_IFFUTURE,'maxorder',[[ZJ_MARKET,IF_CATEGORY],GetRiskErrorCode(QTS_GPROTO_ERROR_RISK_MAX_ORDER),1000,check_on,5])
AppendCheck(QTS_SENDCHECK_ITEM_IFFUTURE,'maxposition',[[ZJ_MARKET,IF_CATEGORY],GetRiskErrorCode(QTS_GPROTO_ERROR_RISK_MAX_POSITION),1000,check_on,6])
AppendCheck(QTS_SENDCHECK_ITEM_IFFUTURE,'maxbuyqty',[[ZJ_MARKET,IF_CATEGORY],GetRiskErrorCode(QTS_GPROTO_ERROR_RISK_MAX_BUY_QTY),1000,check_on,7])
AppendCheck(QTS_SENDCHECK_ITEM_IFFUTURE,'maxbuycount',[[ZJ_MARKET,IF_CATEGORY],GetRiskErrorCode(QTS_GPROTO_ERROR_RISK_MAX_BUY_COUNT),1000,check_on,8])
AppendCheck(QTS_SENDCHECK_ITEM_IFFUTURE,'maxsellqty',[[ZJ_MARKET,IF_CATEGORY],GetRiskErrorCode(QTS_GPROTO_ERROR_RISK_MAX_SELL_QTY),1000,check_on,9])
AppendCheck(QTS_SENDCHECK_ITEM_IFFUTURE,'maxsellcount',[[ZJ_MARKET,IF_CATEGORY],GetRiskErrorCode(QTS_GPROTO_ERROR_RISK_MAX_SELL_COUNT),1000,check_on,10])
AppendCheck(QTS_SENDCHECK_ITEM_IFFUTURE,'maxcancelcount',[[ZJ_MARKET,IF_CATEGORY],GetRiskErrorCode(QTS_GPROTO_ERROR_RISK_MAX_CANCEL_COUNT),1000,check_on,11])
AppendCheck(QTS_SENDCHECK_ITEM_IFFUTURE,'maxunacked',[[ZJ_MARKET,IF_CATEGORY],GetRiskErrorCode(QTS_GPROTO_ERROR_RISK_MAX_UNACKED),1000,check_on,12])
AppendCheck(QTS_SENDCHECK_ITEM_IFFUTURE,'maxworkingqty',[[ZJ_MARKET,IF_CATEGORY],GetRiskErrorCode(QTS_GPROTO_ERROR_RISK_MAX_WORKING_QTY),1000,check_on,13])
AppendCheck(QTS_SENDCHECK_ITEM_IFFUTURE,'maxworkingcount',[[ZJ_MARKET,IF_CATEGORY],GetRiskErrorCode(QTS_GPROTO_ERROR_RISK_MAX_WORKING_COUNT),1000,check_on,14])
AppendCheck(QTS_SENDCHECK_ITEM_IFFUTURE,'maxunhedgeqty',[[ZJ_MARKET,IF_CATEGORY],GetRiskErrorCode(QTS_GPROTO_ERROR_RISK_MAX_UNHEDGE_QTY),1000,check_on,15])
AppendCheck(QTS_SENDCHECK_ITEM_IFFUTURE,'maxlossamount',[[ZJ_MARKET,IF_CATEGORY],GetRiskErrorCode(QTS_GPROTO_ERROR_RISK_MAX_LOSS_AMOUNT),1000,check_on,16])
AppendCheck(QTS_SENDCHECK_ITEM_IFFUTURE,'maxdrawdownamount',[[ZJ_MARKET,IF_CATEGORY],GetRiskErrorCode(QTS_GPROTO_ERROR_RISK_MAX_DRAWDOWN_AMOUNT),1000,check_on,17])
AppendCheck(QTS_SENDCHECK_ITEM_IFFUTURE,'maxthrottleone',[[ZJ_MARKET,IF_CATEGORY],GetRiskErrorCode(QTS_GPROTO_ERROR_RISK_MAX_THROTTLE_ONE),1000,check_on,18])
AppendCheck(QTS_SENDCHECK_ITEM_IFFUTURE,'maxthrottlefive',[[ZJ_MARKET,IF_CATEGORY],GetRiskErrorCode(QTS_GPROTO_ERROR_RISK_MAX_THROTTLE_FIVE),1000,check_on,19])
AppendCheck(QTS_SENDCHECK_ITEM_IFFUTURE,'maxthrottletwenty',[[ZJ_MARKET,IF_CATEGORY],GetRiskErrorCode(QTS_GPROTO_ERROR_RISK_MAX_THROTTLE_TWENTY),1000,check_on,20])
AppendCheck(QTS_SENDCHECK_ITEM_IFFUTURE,'maxconsecutiveloss',[[ZJ_MARKET,IF_CATEGORY],GetRiskErrorCode(QTS_GPROTO_ERROR_RISK_MAX_CONSECUTIVE_LOSS),1000,check_on,21])
AppendCheck(QTS_SENDCHECK_ITEM_IFFUTURE,'position',[[ZJ_MARKET,IF_CATEGORY],GetRiskErrorCode(QTS_GPROTO_ERROR_RISK_ENOUGH_POSITION),0,check_off,3])
AppendCheck(QTS_SENDCHECK_ITEM_IFFUTURE,'account',[[ZJ_MARKET,IF_CATEGORY],GetRiskErrorCode(QTS_GPROTO_ERROR_RISK_ENOUGH_ACCOUNT),0,check_off,4])
AppendCheck(QTS_SENDCHECK_ITEM_IFFUTURE,'overupprice',[[ZJ_MARKET,IF_CATEGORY],GetRiskErrorCode(QTS_GPROTO_ERROR_RISK_OVER_UPPER_PRICE),0,check_on,1])
AppendCheck(QTS_SENDCHECK_ITEM_IFFUTURE,'overloprice',[[ZJ_MARKET,IF_CATEGORY],GetRiskErrorCode(QTS_GPROTO_ERROR_RISK_OVER_LOWER_PRICE),0,check_on,2])
AppendCheck(QTS_SENDCHECK_ITEM_IFFUTURE,'invalidqty',[[ZJ_MARKET,IF_CATEGORY],GetRiskErrorCode(QTS_GPROTO_ERROR_RISK_INVALID_QUANTITY),0,check_on,0])
AppendCheck(QTS_SENDCHECK_ITEM_IFFUTURE,'invalidqty',[[ZJ_MARKET,IF_CATEGORY],GetRiskErrorCode(QTS_GPROTO_ERROR_RISK_OWNER_DEALED),0,check_on,23])
AppendCheck(QTS_SENDCHECK_ITEM_IFFUTURE,'maxopenvolume',[[ZJ_MARKET,IF_CATEGORY],GetRiskErrorCode(QTS_GPROTO_ERROR_RISK_MAX_OPEN_VOLUME),500,check_on,24])
AppendCheck(QTS_SENDCHECK_ITEM_IFFUTURE,'maxopensize',[[ZJ_MARKET,IF_CATEGORY],GetRiskErrorCode(QTS_GPROTO_ERROR_RISK_MAX_OPEN_SIZE),500,check_on,25])
